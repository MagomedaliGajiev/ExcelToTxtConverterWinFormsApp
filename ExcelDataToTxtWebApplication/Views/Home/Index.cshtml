@model ExcelToTxtWebApp.Models.ExcelUploadModel
@{
    ViewData["Title"] = "Конвертер Excel в TXT";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="bi bi-file-earmark-spreadsheet me-2"></i>@ViewData["Title"]
                    </h3>
                </div>

                <div class="card-body">
                    <form asp-action="Index" method="post" enctype="multipart/form-data"
                          class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()

                        <div class="mb-4">
                            <label asp-for="ExcelFile" class="form-label fs-5">
                                <i class="bi bi-upload me-2"></i>Выберите Excel файл
                            </label>
                            <input asp-for="ExcelFile" class="form-control form-control-lg"
                                   accept=".xlsx" required>
                            <span asp-validation-for="ExcelFile" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-file-earmark-arrow-down me-2"></i>Конвертировать
                            </button>
                        </div>
                    </form>

                    @if (!string.IsNullOrEmpty(Model.Message))
                    {
                        <div class="alert alert-dismissible fade show mt-4
                            @(Model.GeneratedFiles.Any() ? "alert-success" : "alert-danger")" role="alert">
                            @Model.Message
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (Model.GeneratedFiles.Any())
                    {
                        <div class="card mt-4 shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title">Скачать файлы:</h5>
                                <div class="list-group">
                                    @foreach (var file in Model.GeneratedFiles)
                                    {
                                        <a href="@file" class="list-group-item list-group-item-action" download>
                                            <i class="bi bi-file-text me-2"></i>
                                            @System.IO.Path.GetFileName(file)
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (() => {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}