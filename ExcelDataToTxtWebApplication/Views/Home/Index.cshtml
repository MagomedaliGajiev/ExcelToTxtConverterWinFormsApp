@model ExcelToTxtWebApp.Models.ExcelUploadModel
@{
    ViewData["Title"] = "Конвертер Excel в TXT";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="bi bi-file-earmark-spreadsheet me-2"></i>@ViewData["Title"]
                    </h3>
                </div>

                <div class="card-body">
                    <form asp-action="Index" method="post" enctype="multipart/form-data"
                          class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()

                        <div class="mb-4">
                            <label asp-for="ExcelFile" class="form-label fs-5">
                                <i class="bi bi-upload me-2"></i>Выберите Excel файл
                            </label>
                            <input asp-for="ExcelFile" class="form-control form-control-lg"
                                   accept=".xlsx" required>
                            <span asp-validation-for="ExcelFile" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-file-earmark-arrow-down me-2"></i>Конвертировать
                            </button>
                        </div>
                    </form>

                    @if (!string.IsNullOrEmpty(Model.Message))
                    {
                            <div class="alert alert-dismissible fade show mt-4
                            @(Model.GeneratedFiles.Any() ? "alert-success" : "alert-danger")"
                                 role="alert">
                            @Model.Message

                            @if (Model.GeneratedFiles.Any())
                            {
                                        <div class="mt-3">
                                            <button onclick="saveFiles()"
                                                    class="btn btn-success">
                                                <i class="bi bi-save-fill me-2"></i>
                                                Сохранить на компьютер
                                            </button>

                                            <!-- Начало добавленного блока -->
                                            <div id="fallbackLinks" class="mt-2 d-none">
                                                <p class="text-muted">Ваш браузер не поддерживает выбор директории. Скачайте файлы по отдельности:</p>
                                        @foreach (var file in Model.GeneratedFiles)
                                        {
                                                        <a href="data:text/plain;charset=utf-8,@file.Content"
                                                           download="@file.FileName"
                                                           class="btn btn-outline-secondary mb-2">
                                                            <i class="bi bi-download me-2"></i>@file.FileName
                                                        </a>
                                        }
                                            </div>
                                            <!-- Конец добавленного блока -->

                                        </div>
                            }
                                <button type="button" class="btn-close"
                                        data-bs-dismiss="alert"></button>
                            </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            async function saveFiles() {
                try {
                    const files = @Html.Raw(Json.Serialize(Model.GeneratedFiles));

                    if (!('showDirectoryPicker' in window)) {
                        document.getElementById('fallbackLinks').classList.remove('d-none');
                        throw new Error('Ваш браузер не поддерживает выбор директории');
                    }

                    const dirHandle = await window.showDirectoryPicker({
                        mode: 'readwrite'
                    });

                    for (const file of files) {
                        const fileHandle = await dirHandle.getFileHandle(file.fileName, { create: true });
                        const writable = await fileHandle.createWritable();
                        await writable.write(file.content);
                        await writable.close();
                    }

                    alert('Файлы успешно сохранены в выбранную директорию!');
                } catch (err) {
                    console.error('Ошибка сохранения:', err);
                    if (!err.message.includes('браузер')) {
                        alert('Ошибка: ' + err.message);
                    }
                }
            }
        </script>
}